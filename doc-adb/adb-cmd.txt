#该命令是用于向设备发送一个点击操作的指令，参数是<x> <y>坐标 eg.adb shell input tap 100 100
adb shell input tap
#向设备发送一个滑动指令，并且可以选择设置滑动时长  adb shell input swipe 100 100 200 200  300 //从 100 100 经历300毫秒滑动到 200 200
input swipe [duration(ms)]
adb shell input swipe 100 100 100 100  1000 //在 100 100 位置长按 1000毫秒
#该命令主要是向系统发送一个按键指令，实现模拟用户在键盘上的按键动作  adb shell input keyevent 26
adb input keyevent
#该命令主要是用于向获得焦点的EditText控件输入内容
adb  shell  text
adb shell input text  "hello,world"
#先列出手机上所有应用信息
adb shell dumpsys package > ./package.txt
#强制关闭应用
adb shell am force-stop xxxxxx
#启动应用
adb  shell am start -n xxxxxx/xxxx
#显示系统中全部设备
adb devices
#终止adb服务进程
adb kill-server
#重启adb服务进程  adb -P <port> start-server # 默认端口为 5037。
adb start-server
#查看屏幕分辨率
adb shell wm size
#安装apk到sd卡
adb install -s // 比如：adb install -s baidu.apk
#安装APK
adb install //比如：adb install baidu.apk
#卸载APK
adb uninstall //比如：adb uninstall com.baidu.aaa
#卸载app但保留数据和缓存文件
adb uninstall -k //比如：adb uninstall -k com.baidu.search
#连接设备
adb connect 192.168.1.61
#断开设备
adb disconnect 192.168.1.61
#列出手机装的所有app的包名
adb shell pm list packages
#列出系统应用的所有包名
adb shell pm list packages -s
#列出除了系统应用的第三方应用包名
adb shell pm list packages -3
#重启到recovery，即恢复模式
adb reboot recovery
#查看log
adb logcat
#清除log缓存
adb logcat -c
#查看bug报告
adb bugreport
#获取机器MAC地址
adb shell cat /sys/class/net/wlan0/address
#获取CPU序列号
adb shell cat /proc/cpuinfo
#保留数据和缓存文件，重新安装apk
adb install -r //比如：adb install -r baidu.apk
#清除应用数据与缓存
adb shell pm clear （apk包名）
#查看设备cpu和内存占用情况
adb shell top
#查看占用内存前6的app
adb shell top -m 6
#刷新一次内存信息，然后返回
adb shell top -n 1
#查询各进程内存使用情况
adb shell procrank
#杀死一个进程
adb shell kill [pid]
ps是查看进程命令，kill pid 你想结束的进程

查看进程列表： adb shell ps
查看指定进程状态： adb shell ps -x [PID]
查看后台services信息： adb shell service list
查看当前内存占用： adb shell cat /proc/meminfo
查看IO内存分区： adb shell cat /proc/iomem
将system分区重新挂载为可读写分区：adb remount
从本地复制文件到设备： adb push
从设备复制文件到本地： adb pull

列出目录下的文件和文件夹，等同于dos中的dir命令：adb shell ls
进入文件夹，等同于dos中的cd 命令： adb shell cd

重命名文件： adb shell rename path/oldfilename path/newfilename
删除system/avi.apk： adb shell rm /system/avi.apk
删除文件夹及其下面所有文件： adb shell rm -r

移动文件： adb shell mv path/file newpath/file
设置文件权限： adb shell chmod 777 /system/fonts/DroidSansFallback.ttf

新建文件夹： adb shell mkdir path/foldelname
查看文件内容： adb shell cat
查看wifi密码： adb shell cat /data/misc/wifi/*.conf

获取设备名称： adb shell cat /system/build.prop
查看ADB帮助： adb help
#使用adb命令操作多台设备，先用：adb devices命令查看所有设备的代号如命令结果如下
emulator-5554
HTC91245667
adb -s emulator-5554 shell就可以连接到模拟器的shell环境。注意里面的-s参数


#window手机截屏
//设置文件名
set fileName=/sdcard/%date:~0,4%%date:~5,2%%date:~8,2%%time:~0,2%%time:~3,2%%time:~6,2%.png
//截图到sdcard
adb shell screencap -p %fileName%
//pull到当前位置
adb pull %fileName%
//删除sdcard中的截图
adb shell  rm %fileName%
#
https://jackpal.github.io/Android-Terminal-Emulator/
