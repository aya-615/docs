#config
npm config set registry https://registry.npm.taobao.org --global
npm config set disturl https://npm.taobao.org/dist --global
#react install
--save-dev 表示在 package.json 文件的 devDependencies 节点下添加包的引用
--save 表示在 package.json 文件的 dependencies 节点下添加包的引用
npm install react react-dom --save-dev
npm install webpack webpack-dev-server --save-dev
npm install webpack-cli --save-dev
#支持符合 ES6 规范的脚本文件（.js 或 .jsx）
npm install babel-core --save-dev
npm install babel-loader --save-dev
npm install babel-preset-es2015 --save-dev
npm install babel-preset-react --save-dev
npm install -g create-react-app --save-dev
#babel-loader: babel加载器
#babel-preset-es2015: 支持es2015
#babel-preset-react: jsx 转换成js
#webpack --config webpack/webpack.config.js
#home nodejs webpack.config.js
#环境变量添加D:\workspace-react\node_modules\.bin
#添加环境变量D:\softinstall\nodejs\node_global
#webpack 版本冲突
export SKIP_PREFLIGHT_CHECK=true
npm install react-grid-layout --save-dev
#
npm run start

#打包
npm run build
#不放置在Root目录下的坑由于默认paths.js【路径：你的react项目名\node_modules\react-scripts\config\paths.js】的配置是’/’即对根目录有效，
#所以如果不放在root下则需要将’/’变成’./’即相对路径有效。（修改代码约在第45行）

#添加js
#jquery等js打包，将所有的JavaScript打包成一个单一的文件，该文件可以包含到你的HTML中
npm install -g browserify
#
npm install -g parcelify
#引用外部js处理方式：https://www.html.cn/archives/5537/
#运行browserify来创建bundle.js，--debug标记来为打包文件添加source maps。这将使它更容易在浏览器的控制台进行调试
browserify entry.js --debug &gt; bundle.js
#告诉browserify在那里可以找到tipso。要做到这一点，添加一个browser键到你的package.json中。
"browser": {
  "tipso": "./node_modules/tipso/src/tipso.js"
}
#引用bundle.js
<script src="./bundle.js"></script>

#添加CSS
#运行parcelify来创建bundle.css
parcelify entry.js -c bundle.css
#告诉parcelify在哪里可以找到你所需要的CSS。要做到这一点，添加一个style键到你的package.json中
"style": [
  "./node_modules/tipso/src/tipso.css"
]
#引用bundle.css
<link rel="stylesheet" href="bundle.css" />

#install yarn
npm install  yarn-install  --save-dev

npm install bootstrap


